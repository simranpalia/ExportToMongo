#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ExportToMongo
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ImmiSys")]
	public partial class IMSEntitiesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertMail(Mail instance);
    partial void UpdateMail(Mail instance);
    partial void DeleteMail(Mail instance);
    partial void InsertMailConversation(MailConversation instance);
    partial void UpdateMailConversation(MailConversation instance);
    partial void DeleteMailConversation(MailConversation instance);
    #endregion
		
		public IMSEntitiesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ImmiSysConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public IMSEntitiesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public IMSEntitiesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public IMSEntitiesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public IMSEntitiesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Mail> Mails
		{
			get
			{
				return this.GetTable<Mail>();
			}
		}
		
		public System.Data.Linq.Table<MailConversation> MailConversations
		{
			get
			{
				return this.GetTable<MailConversation>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Mail")]
	public partial class Mail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Recipient;
		
		private string _MessageId;
		
		private string _SenderName;
		
		private string _FromEmail;
		
		private string _ToEmail;
		
		private string _Subject;
		
		private System.Nullable<bool> _HasAttachment;
		
		private System.Nullable<bool> _IsHtml;
		
		private string _MailBody;
		
		private string _Status;
		
		private System.Nullable<long> _CustomerId;
		
		private System.Nullable<long> _StaffId;
		
		private System.Nullable<long> _MailConversationId;
		
		private string _MailBox;
		
		private System.Nullable<bool> _IsRead;
		
		private System.Nullable<System.DateTime> _CreatedAt;
		
		private string _ForwardFrom;
		
		private string _MongoId;
		
		private EntityRef<MailConversation> _MailConversation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnRecipientChanging(string value);
    partial void OnRecipientChanged();
    partial void OnMessageIdChanging(string value);
    partial void OnMessageIdChanged();
    partial void OnSenderNameChanging(string value);
    partial void OnSenderNameChanged();
    partial void OnFromEmailChanging(string value);
    partial void OnFromEmailChanged();
    partial void OnToEmailChanging(string value);
    partial void OnToEmailChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnHasAttachmentChanging(System.Nullable<bool> value);
    partial void OnHasAttachmentChanged();
    partial void OnIsHtmlChanging(System.Nullable<bool> value);
    partial void OnIsHtmlChanged();
    partial void OnMailBodyChanging(string value);
    partial void OnMailBodyChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnCustomerIdChanging(System.Nullable<long> value);
    partial void OnCustomerIdChanged();
    partial void OnStaffIdChanging(System.Nullable<long> value);
    partial void OnStaffIdChanged();
    partial void OnMailConversationIdChanging(System.Nullable<long> value);
    partial void OnMailConversationIdChanged();
    partial void OnMailBoxChanging(string value);
    partial void OnMailBoxChanged();
    partial void OnIsReadChanging(System.Nullable<bool> value);
    partial void OnIsReadChanged();
    partial void OnCreatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedAtChanged();
    partial void OnForwardFromChanging(string value);
    partial void OnForwardFromChanged();
    partial void OnMongoIdChanging(string value);
    partial void OnMongoIdChanged();
    #endregion
		
		public Mail()
		{
			this._MailConversation = default(EntityRef<MailConversation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recipient", DbType="NVarChar(100)")]
		public string Recipient
		{
			get
			{
				return this._Recipient;
			}
			set
			{
				if ((this._Recipient != value))
				{
					this.OnRecipientChanging(value);
					this.SendPropertyChanging();
					this._Recipient = value;
					this.SendPropertyChanged("Recipient");
					this.OnRecipientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageId", DbType="VarChar(300)")]
		public string MessageId
		{
			get
			{
				return this._MessageId;
			}
			set
			{
				if ((this._MessageId != value))
				{
					this.OnMessageIdChanging(value);
					this.SendPropertyChanging();
					this._MessageId = value;
					this.SendPropertyChanged("MessageId");
					this.OnMessageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SenderName", DbType="NVarChar(200)")]
		public string SenderName
		{
			get
			{
				return this._SenderName;
			}
			set
			{
				if ((this._SenderName != value))
				{
					this.OnSenderNameChanging(value);
					this.SendPropertyChanging();
					this._SenderName = value;
					this.SendPropertyChanged("SenderName");
					this.OnSenderNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromEmail", DbType="NVarChar(100)")]
		public string FromEmail
		{
			get
			{
				return this._FromEmail;
			}
			set
			{
				if ((this._FromEmail != value))
				{
					this.OnFromEmailChanging(value);
					this.SendPropertyChanging();
					this._FromEmail = value;
					this.SendPropertyChanged("FromEmail");
					this.OnFromEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToEmail", DbType="NVarChar(MAX)")]
		public string ToEmail
		{
			get
			{
				return this._ToEmail;
			}
			set
			{
				if ((this._ToEmail != value))
				{
					this.OnToEmailChanging(value);
					this.SendPropertyChanging();
					this._ToEmail = value;
					this.SendPropertyChanged("ToEmail");
					this.OnToEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(1000)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasAttachment", DbType="Bit")]
		public System.Nullable<bool> HasAttachment
		{
			get
			{
				return this._HasAttachment;
			}
			set
			{
				if ((this._HasAttachment != value))
				{
					this.OnHasAttachmentChanging(value);
					this.SendPropertyChanging();
					this._HasAttachment = value;
					this.SendPropertyChanged("HasAttachment");
					this.OnHasAttachmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHtml", DbType="Bit")]
		public System.Nullable<bool> IsHtml
		{
			get
			{
				return this._IsHtml;
			}
			set
			{
				if ((this._IsHtml != value))
				{
					this.OnIsHtmlChanging(value);
					this.SendPropertyChanging();
					this._IsHtml = value;
					this.SendPropertyChanged("IsHtml");
					this.OnIsHtmlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailBody", DbType="NVarChar(MAX)")]
		public string MailBody
		{
			get
			{
				return this._MailBody;
			}
			set
			{
				if ((this._MailBody != value))
				{
					this.OnMailBodyChanging(value);
					this.SendPropertyChanging();
					this._MailBody = value;
					this.SendPropertyChanged("MailBody");
					this.OnMailBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="BigInt")]
		public System.Nullable<long> CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffId", DbType="BigInt")]
		public System.Nullable<long> StaffId
		{
			get
			{
				return this._StaffId;
			}
			set
			{
				if ((this._StaffId != value))
				{
					this.OnStaffIdChanging(value);
					this.SendPropertyChanging();
					this._StaffId = value;
					this.SendPropertyChanged("StaffId");
					this.OnStaffIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailConversationId", DbType="BigInt")]
		public System.Nullable<long> MailConversationId
		{
			get
			{
				return this._MailConversationId;
			}
			set
			{
				if ((this._MailConversationId != value))
				{
					if (this._MailConversation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMailConversationIdChanging(value);
					this.SendPropertyChanging();
					this._MailConversationId = value;
					this.SendPropertyChanged("MailConversationId");
					this.OnMailConversationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailBox", DbType="VarChar(100)")]
		public string MailBox
		{
			get
			{
				return this._MailBox;
			}
			set
			{
				if ((this._MailBox != value))
				{
					this.OnMailBoxChanging(value);
					this.SendPropertyChanging();
					this._MailBox = value;
					this.SendPropertyChanged("MailBox");
					this.OnMailBoxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRead", DbType="Bit")]
		public System.Nullable<bool> IsRead
		{
			get
			{
				return this._IsRead;
			}
			set
			{
				if ((this._IsRead != value))
				{
					this.OnIsReadChanging(value);
					this.SendPropertyChanging();
					this._IsRead = value;
					this.SendPropertyChanged("IsRead");
					this.OnIsReadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForwardFrom", DbType="NVarChar(500)")]
		public string ForwardFrom
		{
			get
			{
				return this._ForwardFrom;
			}
			set
			{
				if ((this._ForwardFrom != value))
				{
					this.OnForwardFromChanging(value);
					this.SendPropertyChanging();
					this._ForwardFrom = value;
					this.SendPropertyChanged("ForwardFrom");
					this.OnForwardFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MongoId", DbType="NVarChar(50)")]
		public string MongoId
		{
			get
			{
				return this._MongoId;
			}
			set
			{
				if ((this._MongoId != value))
				{
					this.OnMongoIdChanging(value);
					this.SendPropertyChanging();
					this._MongoId = value;
					this.SendPropertyChanged("MongoId");
					this.OnMongoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MailConversation_Mail", Storage="_MailConversation", ThisKey="MailConversationId", OtherKey="Id", IsForeignKey=true)]
		public MailConversation MailConversation
		{
			get
			{
				return this._MailConversation.Entity;
			}
			set
			{
				MailConversation previousValue = this._MailConversation.Entity;
				if (((previousValue != value) 
							|| (this._MailConversation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MailConversation.Entity = null;
						previousValue.Mails.Remove(this);
					}
					this._MailConversation.Entity = value;
					if ((value != null))
					{
						value.Mails.Add(this);
						this._MailConversationId = value.Id;
					}
					else
					{
						this._MailConversationId = default(Nullable<long>);
					}
					this.SendPropertyChanged("MailConversation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MailConversation")]
	public partial class MailConversation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _SenderName;
		
		private string _SenderEmail;
		
		private System.Nullable<int> _MessageCount;
		
		private string _Subject;
		
		private string _OwnerEmail;
		
		private System.Nullable<System.DateTime> _LastMessageDate;
		
		private System.Nullable<System.DateTime> _CreatedAt;
		
		private string _MailGunMessageId;
		
		private string _MongoId;
		
		private EntitySet<Mail> _Mails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnSenderNameChanging(string value);
    partial void OnSenderNameChanged();
    partial void OnSenderEmailChanging(string value);
    partial void OnSenderEmailChanged();
    partial void OnMessageCountChanging(System.Nullable<int> value);
    partial void OnMessageCountChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnOwnerEmailChanging(string value);
    partial void OnOwnerEmailChanged();
    partial void OnLastMessageDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastMessageDateChanged();
    partial void OnCreatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedAtChanged();
    partial void OnMailGunMessageIdChanging(string value);
    partial void OnMailGunMessageIdChanged();
    partial void OnMongoIdChanging(string value);
    partial void OnMongoIdChanged();
    #endregion
		
		public MailConversation()
		{
			this._Mails = new EntitySet<Mail>(new Action<Mail>(this.attach_Mails), new Action<Mail>(this.detach_Mails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SenderName", DbType="NVarChar(200)")]
		public string SenderName
		{
			get
			{
				return this._SenderName;
			}
			set
			{
				if ((this._SenderName != value))
				{
					this.OnSenderNameChanging(value);
					this.SendPropertyChanging();
					this._SenderName = value;
					this.SendPropertyChanged("SenderName");
					this.OnSenderNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SenderEmail", DbType="NVarChar(200)")]
		public string SenderEmail
		{
			get
			{
				return this._SenderEmail;
			}
			set
			{
				if ((this._SenderEmail != value))
				{
					this.OnSenderEmailChanging(value);
					this.SendPropertyChanging();
					this._SenderEmail = value;
					this.SendPropertyChanged("SenderEmail");
					this.OnSenderEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageCount", DbType="Int")]
		public System.Nullable<int> MessageCount
		{
			get
			{
				return this._MessageCount;
			}
			set
			{
				if ((this._MessageCount != value))
				{
					this.OnMessageCountChanging(value);
					this.SendPropertyChanging();
					this._MessageCount = value;
					this.SendPropertyChanged("MessageCount");
					this.OnMessageCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(1000)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerEmail", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string OwnerEmail
		{
			get
			{
				return this._OwnerEmail;
			}
			set
			{
				if ((this._OwnerEmail != value))
				{
					this.OnOwnerEmailChanging(value);
					this.SendPropertyChanging();
					this._OwnerEmail = value;
					this.SendPropertyChanged("OwnerEmail");
					this.OnOwnerEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastMessageDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastMessageDate
		{
			get
			{
				return this._LastMessageDate;
			}
			set
			{
				if ((this._LastMessageDate != value))
				{
					this.OnLastMessageDateChanging(value);
					this.SendPropertyChanging();
					this._LastMessageDate = value;
					this.SendPropertyChanged("LastMessageDate");
					this.OnLastMessageDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailGunMessageId", DbType="NVarChar(500)")]
		public string MailGunMessageId
		{
			get
			{
				return this._MailGunMessageId;
			}
			set
			{
				if ((this._MailGunMessageId != value))
				{
					this.OnMailGunMessageIdChanging(value);
					this.SendPropertyChanging();
					this._MailGunMessageId = value;
					this.SendPropertyChanged("MailGunMessageId");
					this.OnMailGunMessageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MongoId", DbType="NVarChar(50)")]
		public string MongoId
		{
			get
			{
				return this._MongoId;
			}
			set
			{
				if ((this._MongoId != value))
				{
					this.OnMongoIdChanging(value);
					this.SendPropertyChanging();
					this._MongoId = value;
					this.SendPropertyChanged("MongoId");
					this.OnMongoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MailConversation_Mail", Storage="_Mails", ThisKey="Id", OtherKey="MailConversationId")]
		public EntitySet<Mail> Mails
		{
			get
			{
				return this._Mails;
			}
			set
			{
				this._Mails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Mails(Mail entity)
		{
			this.SendPropertyChanging();
			entity.MailConversation = this;
		}
		
		private void detach_Mails(Mail entity)
		{
			this.SendPropertyChanging();
			entity.MailConversation = null;
		}
	}
}
#pragma warning restore 1591
